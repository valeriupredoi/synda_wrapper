Explaining get_data_synda.py
============================
(for questions email valeriu.predoi@ncas.ac.uk)

This is a flexible wrapper around the synda mechanism of downloading data from the ESGF. What it does:

- given a specific CMIP file pattern, of the form

CMIP5 MPI-ESM-LR Amon historical r1i1p1

and variable e.g. tro3, it finds all available files on a given data server e.g ceda and stores them in data files of the form:

allAvailableFiles_esgf-index1.ceda.ac.uk/Data_Files_CMIP5_MPI-ESM-LR_Amon_historical_r1i1p1_tro3.txt

- real or --dryrun (fake) downloads the file(s) that correspond to the above pattern and specified years e.g. 1900-1982
and creates an install_cache.txt file that logs the downloads.

Support for multiple types of parameter files and user-defined command-line arguments.

Explaining check_data_synda.py
==============================
This script performs a check of the current/past downloads
and looks into the transfer.log file for debugging.

Explaining cache_BADC.py
========================
This script takes in the same parameter data file as above but it does the following:
- look up the available files on the BADC ESGF node;
- points the user to the physical location of each file on /badc;
- creates a cache (framecache.txt) and a missing data file (missingcache.txt).
Runexample: python cache_BADC.py -p permetrics.txt or with command line arguments. 
